name: Build & Release

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
  push:
    branches:
      - master
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        install: true
        driver-opts: image=moby/buildkit:master

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build Docker image
      id: docker_build
      uses: docker/build-push-action@v6
      with:
        file: docker/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: false
        tags: |
          ghcr.io/${{ github.repository }}:temp
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      if: always()
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Upload Docker Build Context
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: /tmp/.buildx-cache-new

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Semantic Release
        run: |
          npm install semantic-release @semantic-release/github --save-dev
          npm install conventional-changelog-eslint --save-dev

      - name: Semantic Release
        id: semantic_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --ci

      - name: Extract Release Version
        id: extract_version
        run: echo "RELEASE_VERSION=${{ steps.semantic_release.outputs.version }}" >> $GITHUB_ENV

  publish:
    runs-on: ubuntu-latest
    needs: [build, release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Docker Build Context
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: /tmp/.buildx-cache-new

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Publish Docker image
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.RELEASE_VERSION }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache-new
